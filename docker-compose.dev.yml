version: '3'

services:
    rabbitmq:
        image: rabbitmq:3-management
        ports:
            - '5672:5672'
            - '15672:15672'
        env_file:
            - .env
        volumes:
            - 'rabbitmq_data:/var/lib/rabbitmq'
        networks:
            - backend

    mongodb-primary:
        image: docker.io/bitnami/mongodb:5.0
        environment:
            - MONGODB_ADVERTISED_HOSTNAME=mongodb-primary
            - MONGODB_REPLICA_SET_MODE=primary
            - MONGODB_ROOT_PASSWORD=${SET_MONGODB_ROOT_PASSWORD}
            - MONGODB_REPLICA_SET_KEY=${SET_MONGODB_REPLICA_SET_KEY}
        env_file:
            - .env
        volumes:
            - 'mongodb_master_data:/bitnami/mongodb'
        ports:
            - '27027:27017'
        networks:
            - backend

    mongodb-secondary:
        image: docker.io/bitnami/mongodb:5.0
        depends_on:
            - mongodb-primary
        environment:
            - MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary
            - MONGODB_REPLICA_SET_MODE=secondary
            - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
            - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=${SET_MONGODB_ROOT_PASSWORD}
            - MONGODB_REPLICA_SET_KEY=${SET_MONGODB_REPLICA_SET_KEY}
        env_file:
            - .env
        networks:
            - backend

    mongodb-arbiter:
        image: docker.io/bitnami/mongodb:5.0
        depends_on:
            - mongodb-primary
        environment:
            - MONGODB_ADVERTISED_HOSTNAME=mongodb-arbiter
            - MONGODB_REPLICA_SET_MODE=arbiter
            - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
            - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=${SET_MONGODB_ROOT_PASSWORD}
            - MONGODB_REPLICA_SET_KEY=${SET_MONGODB_REPLICA_SET_KEY}
        env_file:
            - .env
        networks:
            - backend

    auth:
        build:
            context: ./
            dockerfile: ./apps/auth/Dockerfile
        environment:
            - RABBITMQ_URLS=amqp://techcell_server:techcell_server_9901@rabbitmq:5672
            - MONGODB_URI=mongodb://root:password123@mongodb-primary:27017/techcell-dev?directConnection=true&authMechanism=SCRAM-SHA-1&replicaSet=replicaset&authSource=admin
        env_file:
            - .env
        depends_on:
            - rabbitmq
        volumes:
            - .:/usr/src/techcell_app
            - /usr/src/techcell_app/node_modules
        command: yarn start:dev auth
        networks:
            - backend

    products:
        build:
            context: ./
            dockerfile: ./apps/products/Dockerfile
        environment:
            - RABBITMQ_URLS=amqp://techcell_server:techcell_server_9901@rabbitmq:5672
            - MONGODB_URI=mongodb://root:password123@mongodb-primary:27017/techcell-dev?directConnection=true&authMechanism=SCRAM-SHA-1&replicaSet=replicaset&authSource=admin
        env_file:
            - .env
        depends_on:
            - rabbitmq
            - mongodb-primary
            - mongodb-secondary
            - mongodb-arbiter
        volumes:
            - .:/usr/src/techcell_app
            - /usr/src/techcell_app/node_modules
        command: yarn start:dev products
        networks:
            - backend

    sample:
        build:
            context: ./
            dockerfile: ./apps/sample/Dockerfile
        environment:
            - RABBITMQ_URLS=amqp://techcell_server:techcell_server_9901@rabbitmq:5672
        env_file:
            - .env
        depends_on:
            - rabbitmq
        volumes:
            - .:/usr/src/techcell_app
            - /usr/src/techcell_app/node_modules
        command: yarn start:dev sample
        networks:
            - backend

    api:
        build:
            context: ./
            dockerfile: ./apps/api/Dockerfile
        environment:
            - RABBITMQ_URLS=amqp://techcell_server:techcell_server_9901@rabbitmq:5672
        env_file:
            - .env
        depends_on:
            - rabbitmq
            - sample
            - products
            - auth
        volumes:
            - .:/usr/src/techcell_app
            - /usr/src/techcell_app/node_modules
        ports:
            - 8000:8000
        command: yarn start:dev api
        networks:
            - backend

networks:
    backend:

volumes:
    mongodb_master_data:
        driver: local
    rabbitmq_data:
        driver: local
    app_data:
        driver: local
