version: '3'

services:
    haproxy:
        build:
            context: ./containers/haproxy
            dockerfile: Dockerfile
        depends_on:
            - rabbitmq1
            - rabbitmq2
            - rabbitmq3
        ports:
            - 15672:15672
            - 5672:5672
        networks:
            - techcell_backend
        restart: unless-stopped

    rabbitmq1:
        build:
            context: ./containers/rabbitmq
            dockerfile: Dockerfile
        hostname: rabbitmq1
        environment:
            - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
            - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
            - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_DEFAULT_VHOST}
            - RABBITMQ_ERLANG_COOKIE=${RABBITMQ_ERLANG_COOKIE}
        networks:
            - techcell_backend
        restart: unless-stopped

    rabbitmq2:
        build:
            context: ./containers/rabbitmq
            dockerfile: Dockerfile
        hostname: rabbitmq2
        depends_on:
            - rabbitmq1
        environment:
            - JOIN_CLUSTER_HOST=rabbitmq1
            - RABBITMQ_ERLANG_COOKIE=${RABBITMQ_ERLANG_COOKIE}
        networks:
            - techcell_backend
        restart: unless-stopped

    rabbitmq3:
        build:
            context: ./containers/rabbitmq
            dockerfile: Dockerfile
        hostname: rabbitmq3
        depends_on:
            - rabbitmq1
        environment:
            - JOIN_CLUSTER_HOST=rabbitmq1
            - RABBITMQ_ERLANG_COOKIE=${RABBITMQ_ERLANG_COOKIE}
        networks:
            - techcell_backend
        restart: unless-stopped

    mongodb-primary:
        image: docker.io/bitnami/mongodb:5.0
        environment:
            - MONGODB_ADVERTISED_HOSTNAME=mongodb-primary
            - MONGODB_REPLICA_SET_MODE=primary
            - MONGODB_ROOT_PASSWORD=${SET_MONGODB_ROOT_PASSWORD}
            - MONGODB_REPLICA_SET_KEY=${SET_MONGODB_REPLICA_SET_KEY}
        env_file:
            - .env
        volumes:
            - 'mongodb_master_data:/bitnami/mongodb'
        ports:
            - '27027:27017'
        networks:
            - techcell_backend
        restart: always

    mongodb-secondary:
        image: docker.io/bitnami/mongodb:5.0
        depends_on:
            - mongodb-primary
        environment:
            - MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary
            - MONGODB_REPLICA_SET_MODE=secondary
            - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
            - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=${SET_MONGODB_ROOT_PASSWORD}
            - MONGODB_REPLICA_SET_KEY=${SET_MONGODB_REPLICA_SET_KEY}
        env_file:
            - .env
        networks:
            - techcell_backend
        restart: always

    mongodb-arbiter:
        image: docker.io/bitnami/mongodb:5.0
        depends_on:
            - mongodb-primary
        environment:
            - MONGODB_ADVERTISED_HOSTNAME=mongodb-arbiter
            - MONGODB_REPLICA_SET_MODE=arbiter
            - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
            - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=${SET_MONGODB_ROOT_PASSWORD}
            - MONGODB_REPLICA_SET_KEY=${SET_MONGODB_REPLICA_SET_KEY}
        env_file:
            - .env
        networks:
            - techcell_backend
        restart: always

    redis:
        image: docker.io/bitnami/redis:7.0
        environment:
            - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG
            - REDIS_PASSWORD=${REDIS_PASSWORD}
        ports:
            - '6379:6379'
        networks:
            - techcell_backend
        volumes:
            - 'redis_data:/redis/data'
        restart: always
        # sysctl -w vm.overcommit_memory=1

networks:
    techcell_backend:

volumes:
    mongodb_master_data:
        driver: local
    rabbitmq_data:
        driver: local
    redis_data:
        driver: local
