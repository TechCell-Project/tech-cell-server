/* DO NOT EDIT, file generated by nestjs-i18n */

import { Path } from "nestjs-i18n";
export type I18nTranslations = {
    "dto": {
        "page": {
            "description": string;
        };
        "pageSize": {
            "description": string;
        };
        "totalPage": {
            "description": string;
        };
        "totalRecord": {
            "description": string;
        };
        "data": {
            "description": string;
        };
    };
    "errorMessage": {
        "MODEL_NOT_FOUND": string;
        "PROPERTY_ID_INVALID": string;
        "PROPERTY_LABEL_NOT_FOUND": string;
        "PROPERTY_LABEL_IS_EXISTS": string;
        "FAIL_TO_HASH_OTP": string;
        "PROPERTY_IS_EXISTS": string;
        "PROPERTY_IS_NOT_FOUND": string;
        "PROPERTY_IS_EXPIRED": string;
        "PROPERTY_IS_INVALID": string;
        "PROPERTY_IS_REQUIRED": string;
        "INTERNAL_SERVER_ERROR": string;
        "TOO_MANY_EMAIL_SENT": string;
        "AUTH_EMAIL_OR_USERNAME_INVALID": string;
        "AUTH_EMAIL_OR_USERNAME_INCORRECT": string;
        "AUTH_ACCOUNT_INCORRECT": string;
        "AUTH_ACCOUNT_IS_BLOCKED": string;
        "AUTH_EMAIL_IS_NOT_VERIFIED": string;
        "AUTH_EMAIL_IS_ALREADY_VERIFIED": string;
        "AUTH_EMAIL_VERIFY_FAILED_WRONG_OTP": string;
        "AUTH_EMAIL_IS_ALREADY_EXIST": string;
        "AUTH_EMAIL_IS_NOT_EXIST": string;
        "AUTH_USERNAME_IS_ALREADY_EXIST": string;
        "AUTH_PASSWORD_DOES_NOT_MATCH": string;
        "AUTH_REFRESH_TOKEN_IS_INVALID": string;
        "AUTH_REFRESH_TOKEN_IS_MISSING": string;
        "AUTH_REFRESH_TOKEN_IS_REVOKED": string;
        "AUTH_REFRESH_TOKEN_IS_EXPIRED": string;
        "AUTH_WRONG_OTP_CODE": string;
        "AUTH_ACCESS_TOKEN_IS_MISSING": string;
        "AUTH_ACCESS_TOKEN_IS_REVOKED": string;
        "AUTH_ACCESS_TOKEN_IS_EXPIRED": string;
        "AUTH_TOKEN_IS_EXPIRED": string;
        "AUTH_TOKEN_IS_INVALID": string;
        "AUTH_GOOGLE_FAILED": string;
        "AUTH_GOOGLE_EMAIL_NOT_VERIFIED": string;
        "AUTH_LOGIN_WITH_FACEBOOK_FAILED": string;
        "AUTH_REGISTER_SUCCESSFULLY": string;
        "AUTH_VERIFY_EMAIL_SUCCESSFULLY": string;
        "AUTH_RESEND_VERIFY_EMAIL_SUCCESSFULLY": string;
        "AUTH_FORGOT_PASSWORD_SUCCESSFULLY": string;
        "AUTH_CHANGE_PASSWORD_SUCCESSFULLY": string;
        "GET_IMAGES_FAILED": string;
        "UPLOAD_IMAGES_FAILED": string;
        "IMAGE_WITH_IDs_NOT_FOUND": string;
        "DUPLICATE_ATTRIBUTE_IN_VARIATIONS": string;
        "DUPLICATE_ATTRIBUTE": string;
        "MISSING_REQUIRED_ATTRIBUTE": string;
        "DUPLICATE_SKUS": string;
        "FORBIDDEN_ROLE": string;
        "ONLY_IMAGE_FILE_IS_ACCEPTED": string;
        "FILE_IS_TOO_LARGE": string;
        "FILE_IS_TOO_LARGE_PROPERTY": string;
        "START_DATE_MUST_BE_BEFORE_END_DATE": string;
        "THIRD_PARTY_ERROR": string;
        "NOT_SUPPORT_SHIP": string;
    };
    "exception": {
        "InternalServerException": string;
        "ThrottleException": string;
    };
    "validation": {
        "IS_NUMBER": string;
        "IS_STRING": string;
        "IS_INT": string;
        "IS_ARRAY": string;
        "IS_DATE": string;
        "IS_ENUM": string;
        "IS_NOT_EMPTY": string;
        "LENGTH": string;
        "MIN_LENGTH": string;
        "MAX_LENGTH": string;
        "IS_POSITIVE": string;
        "IS_NEGATIVE": string;
        "MIN_DATE": string;
        "MAX_DATE": string;
        "MAX": string;
        "MIN": string;
        "IS_EMAIL": string;
        "IS_BOOLEAN": string;
        "IS_MONGO_ID": string;
        "ONLY_LOWER_CASE_OPTIONAL_UNDERSCORE": string;
        "IS_LOWERCASE": string;
        "IS_UPPERCASE": string;
        "IS_NOT_EMPTY_OBJECT": string;
        "ARRAY_MIN_SIZE": string;
        "ARRAY_MAX_SIZE": string;
        "IS_DATE_STRING": string;
        "IS_OBJECT": string;
    };
};
export type I18nPath = Path<I18nTranslations>;
