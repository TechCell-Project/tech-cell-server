name: Generate SDK

on:
    push:
        branches:
            - development
    pull_request:
        branches: ['*']

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up JDK 11
              uses: actions/setup-java@v3
              with:
                  java-version: '11'
                  distribution: 'adopt'

            - name: Use Node.js 18.x
              uses: actions/setup-node@v3
              with:
                  node-version: '18.x'
                  registry-url: 'https://npm.pkg.github.com'
                  scope: '@lehuygiang28'

            - name: Set up Dart SDK 2.19.6
              uses: dart-lang/setup-dart@v1
              with:
                  sdk: 2.19.6 # or any other version like '2.10.5', 'beta', 'dev'

            - name: 'Create .env file'
              run: |
                  touch .env
                  echo API_PORT= '8000' >> .env 
                  echo GOOGLE_CLIENT_ID= 'google_sample' >> .env
                  echo GOOGLE_CLIENT_SECRET= 'google_sample' >> .env
                  echo GOOGLE_REDIRECT_URL= 'google_sample' >> .env
                  echo JWT_ACCESS_TOKEN_SECRET= 'jwt_sample' >> .env
                  echo JWT_REFRESH_TOKEN_SECRET= 'jwt_sample' >> .env
                  echo JWT_ACCESS_TOKEN_EXPIRE_TIME_STRING= '1h' >> .env
                  echo JWT_REFRESH_TOKEN_EXPIRE_TIME_STRING= '1h' >> .env
                  echo FALLBACK_LANGUAGE= 'en' >> .env
                  echo RABBITMQ_UTILITY_QUEUE= 'utility_queue' >> .env
                  echo RABBITMQ_SEARCH_QUEUE= 'search_queue' >> .env
                  echo RABBITMQ_AUTH_QUEUE= 'auth_queue' >> .env
                  echo RABBITMQ_COMMUNICATIONS_QUEUE= 'communications_queue' >> .env
                  echo RABBITMQ_MANAGEMENTS_QUEUE= 'managements_queue' >> .env
                  echo RABBITMQ_ORDER_QUEUE= 'order_queue' >> .env
                  echo RABBITMQ_TASK_QUEUE= 'task_queue' >> .env
                  echo MONGODB_URI= '${{secrets.MONGODB_URI}}' >> .env
                  echo RABBITMQ_URLS= '${{secrets.RABBITMQ_URLS}}' >> .env
                  echo REDIS_HOST= '${{secrets.REDIS_HOST}}' >> .env
                  echo REDIS_PORT= '${{secrets.REDIS_PORT}}' >> .env
                  echo REDIS_PASSWORD= '${{secrets.REDIS_PASSWORD}}' >> .env
                  cat .env

            - name: Install dependencies
              run: yarn install

            - name: Run the web server and generate the OpenAPI YAML
              run: |
                  yarn start api &
                  sleep 20 &&
                  curl http://localhost:8000 &&
                  yarn generate:swagger-yaml

            - name: Remove dist directory
              run: rm -rf dist

            - name: Download Swagger Codegen Generator
              run: |
                  wget https://repo1.maven.org/maven2/io/swagger/codegen/v3/swagger-codegen-cli/3.0.50/swagger-codegen-cli-3.0.50.jar -O swagger-codegen-cli.jar
                  java -jar swagger-codegen-cli.jar --help

            - name: Generate Node SDK
              run: |
                  java -jar swagger-codegen-cli.jar generate \
                  -i swagger.yaml \
                  -l typescript-axios \
                  --git-user-id "TechCell-Project" \
                  --git-repo-id "tech-cell-server-node-sdk" \
                  --release-note "Github integration generated" \
                  -o ./generated/typescript-axios

            - name: Generate Dart SDK
              run: |
                  java -jar swagger-codegen-cli.jar generate \
                  -i swagger.yaml \
                  -l dart \
                  --git-user-id "TechCell-Project" \
                  --git-repo-id "tech-cell-server-dart-sdk" \
                  --release-note "Github integration generated" \
                  -o ./generated/dart

            - name: Update package.json
              run: |
                  echo Adding publishConfig, updating name and version in package.json...
                  techcell_version=$(node -p "require('./package.json').version")
                  commit_hash=$(git rev-parse --short HEAD)
                  node -e "let pkg=require('./generated/typescript-axios/package.json'); pkg.name='@TechCell-Project/tech-cell-server-node-sdk'; pkg.version='${techcell_version}-${commit_hash}'; pkg.publishConfig={registry:'https://npm.pkg.github.com/'}; pkg.author='TechCell Teams <teams@techcell.cloud>'; require('fs').writeFileSync('./generated/typescript-axios/package.json', JSON.stringify(pkg, null, 2));"

            - name: Update pubspec.yaml
              run: |
                  echo Updating version and repository in pubspec.yaml...
                  techcell_version=$(node -p "require('./package.json').version")
                  commit_hash=$(git rev-parse --short HEAD)
                  sed -i 's/version: .*/version: '${techcell_version}-${commit_hash}'/g' ./generated/dart/pubspec.yaml
                  echo 'homepage: https://github.com/TechCell-Project/tech-cell-server-dart-sdk' >> ./generated/dart/pubspec.yaml
                  echo 'repository: https://github.com/TechCell-Project/tech-cell-server-dart-sdk' >> ./generated/dart/pubspec.yaml
                  echo 'publish_to: https://maven.pkg.github.com/TechCell-Project/tech-cell-server-dart-sdk' >> ./generated/dart/pubspec.yaml
                  echo 'environment:' >> ./generated/dart/pubspec.yaml
                  echo '  sdk: ">=2.12.0 <=3.2.3"' >> ./generated/dart/pubspec.yaml

            - name: Authenticate with GitHub Package Registry
              run: |
                  echo "machine maven.pkg.github.com login TechCell-Project password ${{secrets.GIAANG_PACKAGE_TOKEN}}" > ~/.netrc

            - name: Publish dart-sdk package to GitHub Packages
              run: |
                  cd ./generated/dart
                  dart pub publish --force

            - name: Push to GitHub repository
              run: |
                  git config --global user.email "lehuygiang28@gmail.com"
                  git config --global user.name "lehuygiang28"

                  cd ./generated/typescript-axios
                  /bin/sh ./git_push.sh

                  cd ../../
                  cd ./generated/dart
                  /bin/sh ./git_push.sh
              env:
                  GIT_TOKEN: ${{secrets.GIAANG_SDK_REPO_SECRET}}

            - name: Publish node-sdk package to GitHub Packages
              run: |
                  cd ./generated/typescript-axios
                  npm publish
              env:
                  NODE_AUTH_TOKEN: ${{secrets.GIAANG_PACKAGE_TOKEN}}
